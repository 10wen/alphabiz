name: CI/CT for each push
env:
  name: staging_environment

concurrency: staging_environment

on:
  push:
    paths:
      - "**.js"
      - "**/push.yml"
      - "build/**"
    branches: [main]
  pull_request:
    branches: [main]
#
jobs:
  test-1:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 1
      matrix:
        os: [windows-latest, macos-latest]
        node-version: [14]
    environment:
      name: CICD
    env:
      NODE_AUTH_TOKEN: ${{ secrets.PAT }}
      GITHUB_PAT: ${{ secrets.PAT }}
      EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
      EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
      PHONE_NUMBER_ACCOUNT: ${{ secrets.PHONE_NUMBER_ACCOUNT }}
      PHONE_NUMBER_TOKEN: ${{ secrets.PHONE_NUMBER_TOKEN }}
      TEST1_EMAIL: ${{ secrets.TEST1_EMAIL }}
      TEST2_EMAIL: ${{ secrets.TEST2_EMAIL }}
      TEST3_EMAIL: ${{ secrets.TEST3_EMAIL }}
      TEST1_PHONE_NUMBER: ${{ secrets.TEST1_PHONE_NUMBER }}
      TEST2_PHONE_NUMBER: ${{ secrets.TEST2_PHONE_NUMBER }}
      TEST3_PHONE_NUMBER: ${{ secrets.TEST3_PHONE_NUMBER }}
      TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
      TEST_RESET_PASSWORD: ${{ secrets.TEST_RESET_PASSWORD }}
    steps:
      - name: Get short SHA üîë
        id: slug
        run: |
          echo "::set-output name=sha7::${GITHUB_SHA::7}"
        shell: bash

      - name: Checkout ${{ steps.slug.outputs.sha7 }} ‚¨áÔ∏è
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
          registry-url: "https://npm.pkg.github.com"
          scope: "@zeeis"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PAT }}

      - name: Get last commit date
        id: vars
        run: |
          git fetch --prune --unshallow
          echo "::set-output name=commit::$(git log -1 --pretty=%B --author="AlphabizTeam")"
          echo "::set-output name=commit-version::$(git log -1 --pretty=%B --author="AlphabizTeam" | perl -wnE'say for /(?<=v)\d+\.\d+\.\d+/g')"
          echo "::set-output name=commit-message::$(git log -1 --pretty=%B --author="AlphabizTeam" | perl -wnE'say for /\d{8,12}-\w+/g')"
          echo "::set-output name=date::$(git log -1 --date=format:'%Y%m%d' --format='%cd')"
          echo "::set-output name=tag::$(git describe --abbrev=0 --tags)"
        shell: bash

      - name: Checkout vars-date ${{ steps.vars.outputs.date }} ‚¨áÔ∏è
        run: |
          echo "commit: ${{ steps.vars.outputs.commit }}"
          echo "commit-version: ${{ steps.vars.outputs.commit-version }}"
          echo "commit-message: ${{ steps.vars.outputs.commit-message }}"
          echo "${{ steps.vars.outputs.date }}"
          echo "${{ steps.vars.outputs.tag }}"

      - name: Install dependencies üë®üèª‚Äçüíª
        run: yarn
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PAT }}
          GITHUB_PAT: ${{ secrets.PAT }}

      - name: Install UnPackaged üë®üèª‚Äçüíª
        run: |
          cd build/electron/UnPackaged
          yarn
        shell: bash

      - name: Patch unpackaged node_modules
        run: yarn patch-unpackaged

      - name: E2E Test for Electron üß™
        run: yarn test:e2e:electron

      - name: E2E Test üß™
        run: yarn test:e2e:ci

      - name: Upload Test Results üóÉ
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: "output1"
          path: test/output/**
