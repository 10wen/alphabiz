diff --git a/node_modules/gun/gun.js b/node_modules/gun/gun.js
index 5db12d4..f1fb92e 100644
--- a/node_modules/gun/gun.js
+++ b/node_modules/gun/gun.js
@@ -1635,7 +1635,11 @@
 			root.on('bye', function(peer, tmp){
 				peer = opt.peers[peer.id || peer] || peer;
 				this.to.next(peer);
-				peer.bye? peer.bye() : (tmp = peer.wire) && tmp.close && tmp.close();
+				if (peer.bye) {
+          peer.bye();
+        } else if(peer.wire && peer.wire.close){
+          peer.wire.close();
+        }
 				delete opt.peers[peer.id];
 				peer.wire = null;
 			});
@@ -1686,16 +1690,22 @@
 
 			var wire = mesh.wire || opt.wire;
 			mesh.wire = opt.wire = open;
+
+      // console.log('%cGunPatch:enable', 'background-color: gainsboro; padding: 2px 8px;')
+
 			function open(peer){ try{
 				if(!peer || !peer.url){ return wire && wire(peer) }
 				var url = peer.url.replace(/^http/, 'ws');
 				var wire = peer.wire = new opt.WebSocket(url);
 				wire.onclose = function(){
 					opt.mesh.bye(peer);
-					reconnect(peer);
+					// disable internal reconnect
+					// reconnect(peer);
 				};
 				wire.onerror = function(error){
-					reconnect(peer);
+          // console.log('wire.onerror', error)
+          // disable internal reconnect
+					// reconnect(peer);
 				};
 				wire.onopen = function(){
 					opt.mesh.hi(peer);
diff --git a/node_modules/gun/lib/webrtc.js b/node_modules/gun/lib/webrtc.js
index abc887c..f279eb1 100644
--- a/node_modules/gun/lib/webrtc.js
+++ b/node_modules/gun/lib/webrtc.js
@@ -42,13 +42,13 @@
 			setTimeout(opt.announce, 1);
 		});
 		root.on('in', function(msg){
-			if(msg.rtc){ open(msg) }
+			if(msg.rtc) open(msg);
 			this.to.next(msg);
 		});
 
 		function open(msg){
 			var rtc = msg.rtc, peer, tmp;
-			if(!rtc || !rtc.id){ return }
+      if(!rtc || !rtc.id){ return }
 			delete opt.announce[rtc.id]; /// remove after connect
 			if(tmp = rtc.answer){
 				if(!(peer = opt.peers[rtc.id] || open[rtc.id]) || peer.remoteSet){ return }
@@ -56,6 +56,7 @@
 				return peer.setRemoteDescription(peer.remoteSet = new opt.RTCSessionDescription(tmp));
 			}
 			if(tmp = rtc.candidate){
+        // console.log('rtc.candidate.candidate', rtc.candidate.candidate)
 				peer = opt.peers[rtc.id] || open[rtc.id] || open({rtc: {id: rtc.id}});
 				return peer.addIceCandidate(new opt.RTCIceCandidate(tmp));
 			}
@@ -89,7 +90,8 @@
 				rc.onclose = wire.onclose;
 			}
 			if(tmp = rtc.offer){
-				rtc.offer.sdp = rtc.offer.sdp.replace(/\\r\\n/g, '\r\n')
+        // console.log('rtc.offer', rtc.offer, rtc.offer.sdp)
+        rtc.offer.sdp = rtc.offer.sdp.replace(/\\r\\n/g, '\r\n')
 				peer.setRemoteDescription(new opt.RTCSessionDescription(tmp));
 				peer.createAnswer(function(answer){
 					peer.setLocalDescription(answer);
